openapi: 3.0.0
info:
  title: Grandma's Recipes API
  description: API for managing recipes, users, and meal planning
  version: 1.0.0
  
servers:
  - url: http://localhost:3000
    description: Development server

tags:
  - name: Auth
    description: Authentication operations
  - name: Users
    description: User management operations
  - name: Recipes
    description: Recipe management operations

paths:
  /register:
    post:
      tags:
        - Auth
      summary: Register a new user
      description: Create a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
            example:
              username: "johndoe"
              firstName: "John"
              lastName: "Doe"
              country: "Israel"
              password: "Pass123!"
              email: "john@example.com"
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '409':
          description: Username already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /login:
    post:
      tags:
        - Auth
      summary: Login user
      description: Authenticate user and create session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
            example:
              username: "johndoe"
              password: "Pass123!"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /logout:
    post:
      tags:
        - Auth
      summary: Logout user
      description: End user session
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'

  /users/favorites:
    get:
      tags:
        - Users
      summary: Get user's favorite recipes
      description: Get all recipes marked as favorite by the user
      security:
        - cookieAuth: []
      responses:
        '200':
          description: List of favorite recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    post:
      tags:
        - Users
      summary: Add recipe to favorites
      description: Mark recipe as favorite
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recipeId
              properties:
                recipeId:
                  type: string
                  description: Recipe ID to add to favorites
                  example: "716429"
      responses:
        '200':
          description: Recipe added to favorites
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Recipe ID is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users/myRecipes:
    get:
      tags:
        - Users
      summary: Get user's created recipes
      description: Get all recipes created by the user
      security:
        - cookieAuth: []
      responses:
        '200':
          description: List of user's recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    post:
      tags:
        - Users
      summary: Create a new recipe
      description: Create a new user recipe
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeCreation'
      responses:
        '201':
          description: Recipe created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users/familyRecipes:
    get:
      tags:
        - Users
      summary: Get family recipes
      description: Get user's family recipes
      security:
        - cookieAuth: []
      responses:
        '200':
          description: List of family recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FamilyRecipe'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    post:
      tags:
        - Users
      summary: Add a family recipe
      description: Add a new family recipe
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FamilyRecipeCreation'
      responses:
        '201':
          description: Family recipe created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /users/last-viewed:
    get:
      tags:
        - Users
      summary: Get last viewed recipes
      description: Get last 3 recipes viewed by user
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Last viewed recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /recipes:
    get:
      tags:
        - Recipes
      summary: Get random recipes
      description: Get 3 random recipes for homepage
      responses:
        '200':
          description: Random recipes retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'

  /recipes/search:
    get:
      tags:
        - Recipes
      summary: Search recipes
      description: Search for recipes with filters
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search query
          example: "pasta"
        - in: query
          name: number
          schema:
            type: integer
            enum: [5, 10, 15]
            default: 5
          description: Number of results to return
        - in: query
          name: cuisine
          schema:
            type: string
          description: Filter by cuisine type
          example: "Italian"
        - in: query
          name: diet
          schema:
            type: string
          description: Filter by diet type
          example: "Vegetarian"
        - in: query
          name: intolerance
          schema:
            type: string
          description: Filter by intolerance
          example: "Gluten"
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'

  /recipes/{recipeId}:
    get:
      tags:
        - Recipes
      summary: Get recipe details
      description: Get full recipe details by ID
      parameters:
        - in: path
          name: recipeId
          required: true
          schema:
            type: string
          description: Recipe ID
      security:
        - cookieAuth: []
        - {}
      responses:
        '200':
          description: Recipe details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDetails'
        '404':
          description: Recipe not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session

  schemas:
    UserRegistration:
      type: object
      required:
        - username
        - firstName
        - lastName
        - country
        - password
        - email
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 8
          pattern: '^[a-zA-Z]+$'
          description: Username (3-8 letters only)
          example: "johndoe"
        firstName:
          type: string
          description: User's first name
          example: "John"
        lastName:
          type: string
          description: User's last name
          example: "Doe"
        country:
          type: string
          description: User's country
          example: "Israel"
        password:
          type: string
          minLength: 5
          maxLength: 10
          pattern: '^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]+$'
          description: Password (5-10 chars, at least 1 number and 1 special char)
          example: "Pass123!"
        email:
          type: string
          format: email
          description: User's email
          example: "john@example.com"

    LoginCredentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: Username
          example: "johndoe"
        password:
          type: string
          description: Password
          example: "Pass123!"

    LoginResponse:
      type: object
      properties:
        message:
          type: string
          example: "Login successful"
        username:
          type: string
          example: "johndoe"

    RecipePreview:
      type: object
      properties:
        id:
          type: string
          description: Recipe ID
          example: "716429"
        title:
          type: string
          description: Recipe title
          example: "Pasta with Garlic, Scallions, Cauliflower & Breadcrumbs"
        image:
          type: string
          description: Recipe image URL
          example: "https://spoonacular.com/recipeImages/716429-556x370.jpg"
        readyInMinutes:
          type: integer
          description: Preparation time in minutes
          example: 45
        popularity:
          type: integer
          description: Recipe popularity (likes)
          example: 209
        vegetarian:
          type: boolean
          description: Is vegetarian
          example: false
        vegan:
          type: boolean
          description: Is vegan
          example: false
        glutenFree:
          type: boolean
          description: Is gluten free
          example: false
        viewed:
          type: boolean
          description: Has user viewed this recipe
          example: false
        favorite:
          type: boolean
          description: Is recipe in user's favorites
          example: false

    RecipeDetails:
      type: object
      properties:
        id:
          type: string
          description: Recipe ID
          example: "716429"
        title:
          type: string
          description: Recipe title
          example: "Pasta with Garlic, Scallions, Cauliflower & Breadcrumbs"
        image:
          type: string
          description: Recipe image URL
          example: "https://spoonacular.com/recipeImages/716429-556x370.jpg"
        readyInMinutes:
          type: integer
          description: Preparation time in minutes
          example: 45
        popularity:
          type: integer
          description: Recipe popularity (likes)
          example: 209
        vegetarian:
          type: boolean
          description: Is vegetarian
          example: false
        vegan:
          type: boolean
          description: Is vegan
          example: false
        glutenFree:
          type: boolean
          description: Is gluten free
          example: false
        servings:
          type: integer
          description: Number of servings
          example: 2
        extendedIngredients:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "flour"
              amount:
                type: number
                example: 1.5
              unit:
                type: string
                example: "cups"
        instructions:
          type: string
          description: Cooking instructions
          example: "1. Boil water..."
        viewed:
          type: boolean
          description: Has user viewed this recipe
          example: true
        favorite:
          type: boolean
          description: Is recipe in user's favorites
          example: false

    RecipeCreation:
      type: object
      required:
        - title
        - image
        - readyInMinutes
        - servings
        - ingredients
        - instructions
      properties:
        title:
          type: string
          description: Recipe title
          example: "Homemade Pizza"
        image:
          type: string
          description: Recipe image URL
          example: "https://example.com/pizza.jpg"
        readyInMinutes:
          type: integer
          description: Preparation time in minutes
          example: 60
        servings:
          type: integer
          description: Number of servings
          example: 4
        vegetarian:
          type: boolean
          description: Is vegetarian
          example: false
        vegan:
          type: boolean
          description: Is vegan
          example: false
        glutenFree:
          type: boolean
          description: Is gluten free
          example: false
        ingredients:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "flour"
              amount:
                type: number
                example: 2
              unit:
                type: string
                example: "cups"
        instructions:
          type: string
          description: Cooking instructions
          example: "1. Mix ingredients..."

    FamilyRecipe:
      type: object
      properties:
        id:
          type: string
          description: Recipe ID
          example: "family_1"
        title:
          type: string
          description: Recipe title
          example: "Grandma's Chicken Soup"
        image:
          type: string
          description: Recipe image URL
          example: "https://example.com/soup.jpg"
        author:
          type: string
          description: Who created this recipe
          example: "Grandma Sarah"
        whenToMake:
          type: string
          description: When is this recipe traditionally made
          example: "Friday nights and holidays"
        ingredients:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "chicken"
              amount:
                type: number
                example: 1
              unit:
                type: string
                example: "whole"
        instructions:
          type: string
          description: Cooking instructions
          example: "1. Clean the chicken..."

    FamilyRecipeCreation:
      type: object
      required:
        - title
        - author
        - whenToMake
        - ingredients
        - instructions
      properties:
        title:
          type: string
          description: Recipe title
          example: "Grandma's Chicken Soup"
        image:
          type: string
          description: Recipe image URL (optional)
          example: "https://example.com/soup.jpg"
        author:
          type: string
          description: Who created this recipe
          example: "Grandma Sarah"
        whenToMake:
          type: string
          description: When is this recipe traditionally made
          example: "Friday nights and holidays"
        ingredients:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "chicken"
              amount:
                type: number
                example: 1
              unit:
                type: string
                example: "whole"
        instructions:
          type: string
          description: Cooking instructions
          example: "1. Clean the chicken..."

    MessageResponse:
      type: object
      properties:
        message:
          type: string
          example: "Operation successful"

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "Error occurred"
        error:
          type: string
          example: "Invalid input"

    RecipeResponse:
      type: object
      properties:
        message:
          type: string
          example: "Recipe created successfully"
        recipeId:
          type: string
          example: "123456"